#!/usr/bin/env python3
"""========================================================================
Purpose:
    The purpose of this script is to calculate term_3 in the enstrophy
    transport study, namely,

    d(nu_{sgs})/dx_{l}*d(Omega)/dx_{l}

Author:
    Emilio Torres
========================================================================"""
#=========================================================================#
# Preamble                                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Python package                                                          #
#-------------------------------------------------------------------------#
import sys
from subprocess import call
import numpy as np
#=========================================================================#
# User defined functions                                                  #
#=========================================================================#
#-------------------------------------------------------------------------#
# term 3                                                                  #
#-------------------------------------------------------------------------#
def term_3(
        enst,
        nu_sgs):

    """ Calculating term 3 """
    #---------------------------------------------------------------------#
    # preallocating and defining domain variables                         #
    #---------------------------------------------------------------------#
    h       = 2.0*np.pi/64.0
    term    = np.zeros((64,64,64))
    #---------------------------------------------------------------------#
    # calculating term 3                                                  #
    #---------------------------------------------------------------------#
    term    += np.gradient(nu_sgs, h, edge_order=2)[2]*\
                np.gradient(enst, h, edge_order=2)[2]
    term    += np.gradient(nu_sgs, h, edge_order)[1]*\
                np.gradient(enst, h, edge_order=2)[1]
    term    += np.gradient(nu_sgs, h, edge_order=2)[0]*\
                np.gradient(enst, h, edge_order=2)[0]

    return term
#=========================================================================#
# Main                                                                    #
#=========================================================================#
if __name__ == '__main__':
    #---------------------------------------------------------------------#
    # Main preamble                                                       #
    #---------------------------------------------------------------------#
    call(['clear'])

    print('**** This has not been unit tested *****')

    sys.exit(0)
