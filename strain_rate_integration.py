#!/usr/bin/env python3
"""========================================================================
Purpose:
    The purpose of this subroutine is to perform the numerical integration
    of the local strain rate according to Hamlington and Dahm 2008a.

    **** Note: Currently everything is done using Cartesian coordinate
               system.

Author:
    Emilio Torres
========================================================================"""
#=========================================================================#
# Preamble                                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Python packages                                                         #
#-------------------------------------------------------------------------#
import sys
from subprocess import call
#=========================================================================#
# User defined functions                                                  #
#=========================================================================#
#-------------------------------------------------------------------------#
# r term (i.e., r = x_{i}-x'_{i})                                         #
#-------------------------------------------------------------------------#
def r_term(
        x,                  # x_{1} value
        y,                  # y_{1} value
        z,                  # z_{1} value
        xp,                 # x_{2} value
        yp,                 # y_{2} value
        zp):                # z_{2} value

    """ Calculating r_{m} and r for the strain rate integration """
    #---------------------------------------------------------------------#
    # Calculating r_{m}                                                   #
    #---------------------------------------------------------------------#
    rx      = x-xp
    ry      = y-yp
    rz      = z-zp
    #---------------------------------------------------------------------#
    # Calculating r                                                       #
    #---------------------------------------------------------------------#
    r       = (rx**2.0 + ry**2.0 + rz**2.0)**(0.5)

    return (r, rx, ry, rz)
#=========================================================================#
# Main                                                                    #
#=========================================================================#
if __name__ == "__main__":
    #---------------------------------------------------------------------#
    # Main preamble                                                       #
    #---------------------------------------------------------------------#
    call(["clear"])
    #---------------------------------------------------------------------#
    # r term test                                                         #
    #---------------------------------------------------------------------#
    x1              = 1.0
    y1              = -2.5
    z1              = 4.5
    x2              = -5.2
    y2              = 1.0
    z2              = 2.25
    (R, Rx, Ry, Rz) = r_term(x1,y1,z1,x2,y2,z2)
    print("r term test:")
    print("\tx_{1} = %.2f \t x_{2} = %.2f"      %(x1, x2))
    print("\t\tr_{x}=%.5f"                      %(Rx))
    print("\ty_{1} = %.2f \t y_{2} = %.2f"      %(y1, y2))
    print("\t\tr_{y}=%.5f"                      %(Ry))
    print("\tz_{1} = %.2f \t z_{2} = %.2f"      %(z1, z2))
    print("\t\tr_{z}=%.5f"                      %(Rz))
    print("\tr=%.5f"                %(R))

    print("\n\n**** Successful Run ****")
    sys.exit(0)
