#!/usr/bin/env python3
"""========================================================================
Purpose:
    The purpose of this subroutine is to calculate the D term in the
    kinetic energy transport equation.

Author:
    Emilio Torres
========================================================================"""
#=========================================================================#
# Preamble                                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Python packages                                                         #
#-------------------------------------------------------------------------#
import os
import sys
from subprocess import call
import numpy as np
import matplotlib.pyplot as plt
#-------------------------------------------------------------------------#
# User packages                                                           #
#-------------------------------------------------------------------------#
from strain_rates   import strain_rates
#=========================================================================#
# User defined functions                                                  #
#=========================================================================#
#-------------------------------------------------------------------------#
# D term                                                                  #
#-------------------------------------------------------------------------#
def d_term(
        U1,                 # velocity-1 component
        U2,                 # velocity-2 component
        U3,                 # velocity-3 component
        NU,                 # viscosity
        h):                 # spatial step size

    """ Calculating the D term in the kinetic energy transport equation """
    #---------------------------------------------------------------------#
    # Calculating the strain rates                                        #
    #---------------------------------------------------------------------#
    (S11, S12, S13, S22, S23, S33)  = strain_rates(U1, U2, U3, h)
    #---------------------------------------------------------------------#
    # Calculating the 6 terms                                             #
    #---------------------------------------------------------------------#
    term1       = np.multiply(S11, S11)
    term2       = 2.0*np.multiply(S12, S12)
    term3       = 2.0*np.multiply(S13, S13)
    term4       = np.multiply(S22, S22)
    term5       = 2.0*np.multiply(S23, S23)
    term6       = np.multiply(S33, S33)
    #---------------------------------------------------------------------#
    # Calculating the D term                                              #
    #---------------------------------------------------------------------#
    D           = -2.0*NU*(term1 + term2 + term3 + term4 + term5 + term6)

    return D
#=========================================================================#
# Main                                                                    #
#=========================================================================#
if __name__ == "__main__":
    #---------------------------------------------------------------------#
    # Main preamble                                                       #
    #---------------------------------------------------------------------#
    call(["clear"])
    sep         = os.sep
    pwd         = os.getcwd()
    data_path   = pwd + "%cdata%c"              %(sep, sep)
    #---------------------------------------------------------------------#
    # Defining domain variables                                           #
    #---------------------------------------------------------------------#
    pi          = np.pi
    x1          = np.linspace(0, 2.0*pi, 64)
    x2          = np.linspace(0, 2.0*pi, 64)
    [X1, X2]    = np.meshgrid(x1, x2)
    dx          = (2.0*pi)/64.0
    nu          = 0.000185
    #---------------------------------------------------------------------#
    # Loading data                                                        #
    #---------------------------------------------------------------------#
    u1          = np.load(data_path + "velocity1.npy")
    u2          = np.load(data_path + "velocity2.npy")
    u3          = np.load(data_path + "velocity3.npy")
    #---------------------------------------------------------------------#
    # Defining velocity data                                              #
    #---------------------------------------------------------------------#
    tslice      = 50
    u1          = u1[:,:,:,tslice]
    u2          = u2[:,:,:,tslice]
    u3          = u3[:,:,:,tslice]
    #---------------------------------------------------------------------#
    # Calculating the D term                                              #
    #---------------------------------------------------------------------#
    d           = d_term(u1, u2, u3, nu, dx)
    #---------------------------------------------------------------------#
    # Plotting the results                                                #
    #---------------------------------------------------------------------#
    cnt = plt.contourf(X1, X2, d[:,:,32], 500, cmap="jet")
    for c in cnt.collections:
        c.set_edgecolors("face")
    plt.xlabel(r"$0 \leq x_{1} \leq 2\pi$")
    plt.ylabel(r"$0 \leq x_{1} \leq 2\pi$")
    plt.colorbar()
    plt.show()

    print("**** Successful Run ****")
    sys.exit(0)
