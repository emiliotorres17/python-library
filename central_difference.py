#!/usr/bin/env python3
"""========================================================================
Purpose:
    The purpose of this subroutine is to calculate various derivates for a
    NxNxNxN_{t} arrays from LES code.

Author:
    Emilio Torres
========================================================================"""
# TEST
#=========================================================================#
# Preamble python packages                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Python packages                                                         #
#-------------------------------------------------------------------------#
import sys
from subprocess import call
import numpy as np
#=========================================================================#
# User defined subroutines                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Time derivative                                                         #
#-------------------------------------------------------------------------#
def time_derv(
        field,              # Field
        Nt,                 # number of time steps
        dt):                # temporal step size

    """ Calculating dF/dt using a second order scheme; if it is not at the
    boundary """
    #---------------------------------------------------------------------#
    # Define domain variables                                             #
    #---------------------------------------------------------------------#
    dim         = field.shape
    DT          = np.zeros((dim[0], dim[1], dim[2]))
    c1          = 1/(2.0*dt)
    #---------------------------------------------------------------------#
    # Looping over the time and space variables                           #
    #---------------------------------------------------------------------#
    for k in range(0, dim[2]):
        for j in range(0, dim[1]):
            for i in range(0, dim[0]):
                DT[i,j,k]   = c1*(field[i,j,k,Nt+1] - field[i,j,k,Nt-1])

    return DT
#=========================================================================#
# Main                                                                    #
#=========================================================================#
if __name__ == "__main__":
    #---------------------------------------------------------------------#
    # Main preamble                                                       #
    #---------------------------------------------------------------------#
    call(["clear"])
    print("**** Has not been unit test ****")
    sys.exit(0)
